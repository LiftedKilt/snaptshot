#!/bin/bash

#Determine which drive is mounted as / and ensure the filesystem is btrfs
root_disk=$(df -h | grep \/$ | awk '{print $1}')
root_disk_fs=$(mount | grep $root_disk | grep " / " | awk '{print $5}')
if [ $root_disk_fs != "btrfs" ]; then
	echo "Sorry, your root partition is mounted on $root_disk, and appears to be formatted with $root_disk_fs. Please ensure it is a btrfs partition"
	exit 1
fi

# ensure running as root
if [ "$(id -u)" != "0" ]; then
  exec sudo "$0" "$@"
fi

if [ $1 = "list" ]; then
	if [ $(btrfs subvolume list / | grep apt | awk '{print $9}' | wc -l) = 0 ]; then
		echo "No snapshots found."
	else
		echo -e "==APT Snapshots =="
  	btrfs subvolume list / | grep apt | awk '{print $9}'
	fi
elif [ $1 = "destroy" ]; then
	if [ $(sudo btrfs subvolume list / | grep apt | wc -l) != 1 ]; then
		echo -e "There is more than one snapshot - please manually remove snapshots, or rerun with destroy-all"
		exit 1
	else
		mount $root_disk /mnt
		apt_snapshot=$(sudo btrfs subvolume list / | grep apt | awk '{print $9}')
		print_working_dir=$(pwd)
		cd /mnt
		echo "deleting $apt_snapshot"
		btrfs subvolume delete $apt_snapshot
		echo "$apt_snapshot deleted"
		cd $print_working_dir
		sudo umount /mnt
	fi
elif [ $1 = "destroy-all" ]; then
	mount $root_disk /mnt
	apt_snapshot=$(sudo btrfs subvolume list / | grep apt | awk '{print $9}')
	print_working_dir=$(pwd)
	cd /mnt
	echo $apt_snapshot | xargs btrfs subvolume delete
	echo "All Apt Snapshots deleted"
	cd $print_working_dir
	sudo umount /mnt
elif [ $1 = "restore" ]; then
	if [ $(sudo btrfs subvolume list / | grep apt | wc -l) != 1 ]; then
		echo -e "There is more than one snapshot - please manually remove excess snapshots"
		exit 1
	else
		mount $root_disk /mnt
		apt_snapshot=$(sudo btrfs subvolume list / | grep apt | awk '{print $9}')
		print_working_dir=$(pwd)
		cd /mnt
		mv ./@ ./@_badroot
		mv ./$apt_snapshot ./@
		cd $print_working_dir
		sudo umount /mnt
		echo "System restore has been successfully completed. Please reboot to apply the restored filesystem. If everything looks good, run \"snaptshot destroy-badroot option\""
	fi
elif [ $1 = "destroy-badroot" ]; then
	mount $root_disk /mnt
	apt_snapshot=$(sudo btrfs subvolume list / | grep badroot | awk '{print $9}')
	print_working_dir=$(pwd)
	cd /mnt
	echo $apt_snapshot | xargs btrfs subvolume delete
	cd $print_working_dir
	sudo umount /mnt
else [ -z "$1" ]; then
	echo -e "No Parameters provided.\nUsage: list, restore, destroy, destroy-all, destroy-badroot"
	exit 1
fi
